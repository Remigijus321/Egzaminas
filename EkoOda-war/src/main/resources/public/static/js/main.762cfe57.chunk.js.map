{"version":3,"sources":["components/svg/bars-solid.svg","components/svg/times-solid.svg","components/svg/cart.svg","components/services/ProductService.js","components/DataProvider.js","components/Header.js","components/Products.js","components/Vaccines.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","get","center","post","product","delete","productId","DataContext","createContext","DataProvider","props","useState","centers","setCenters","useEffect","ProductService","getCenters","then","response","data","vaccines","setVaccines","localStorage","setItem","JSON","stringify","value","Provider","children","Header","menu","setMenu","toggleMenu","useContext","styleMenu","left","className","onClick","src","Menu","alt","width","style","to","Close","Products","map","key","id","imageLink","title","name","description","address","Cart","productTitle","marginTop","desctiption","quantity","App","basename","process","path","element","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.762cfe57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bars-solid.b3f49afd.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-solid.2c5552a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.8bf1af37.svg\";","import axios from 'axios';\n\nclass ProductService {\n\n    getCenters() {\n        return axios.get('http://localhost:8080/EkoOda-war-0.0.1-SNAPSHOT/api/centers');\n    }\n\n    addCenter(center) {\n        return axios.post('http://localhost:8080/EkoOda-war-0.0.1-SNAPSHOT/api/centers', center)\n    }\n\n    getVaccines() {\n        return axios.get('http://localhost:8080/EkoOda-war-0.0.1-SNAPSHOT/api/vaccines');\n    }\n\n    removeItemFromCart(product) {\n        return axios.delete(`http://localhost:8080/hello-world-calc-0.0.1-SNAPSHOT/api/cart/${product.productId}`, product)\n    }\n}\n\nexport default new ProductService();","import React, {createContext, useState, useEffect} from 'react'\nimport ProductService from './services/ProductService';\n\nexport const DataContext = createContext();\n\nexport const DataProvider = (props) => {\n    const [centers, setCenters] = useState([]);\n\n    useEffect(() => {\n        ProductService.getCenters().then((response) => {\n        setCenters(response.data)\n        })\n    }, [setCenters])\n\n    const [vaccines, setVaccines] = useState([])\n\n    useEffect(() => {\n        localStorage.setItem('dataCart', JSON.stringify(vaccines))\n    },[setVaccines])\n\n\n    const value = {\n        centers: [centers, setCenters],\n        vaccines: [vaccines, setVaccines],\n    }\n\n    return (\n        <DataContext.Provider value={value}>\n            {props.children}\n        </DataContext.Provider>\n    )\n}\n","import React, {useState, useContext} from 'react'\nimport Menu from './svg/bars-solid.svg'\nimport Close from './svg/times-solid.svg'\nimport Cart from './svg/cart.svg'\nimport {Link} from 'react-router-dom'\nimport {DataContext} from './DataProvider'\nimport ProductService from './services/ProductService'\n\nexport default function Header() {\n    const [menu, setMenu] = useState(false)\n    const value = useContext(DataContext)\n\n    const toggleMenu = () =>{\n        setMenu(!menu)\n    }\n\n    const styleMenu = {\n        left: menu ? 0 : \"-100%\"\n    }\n\n    return (\n        <header>\n            <div className=\"menu\" onClick={toggleMenu}>\n                <img src={Menu} alt=\"\" width=\"30\" />\n            </div>\n\n            <ul style={styleMenu}>\n                <li><Link to=\"/centers\">Vakcinacijos centrai</Link></li>\n                <li><Link to=\"/vaccines\">Vakcinos</Link></li>\n                <li><Link to=\"/\">About</Link></li>\n                <li onClick={toggleMenu}>\n                    <img src={Close} alt=\"\" width=\"30\" className=\"menu\" />\n                </li>\n            </ul>\n      </header>\n    )\n}\n","import React, {useContext} from 'react'\nimport {DataContext} from './DataProvider'\nimport {Link} from 'react-router-dom'\nimport ProductService from './services/ProductService'\n\nexport default function Products() {\n    const value = useContext(DataContext)\n    const [centers] = value.centers\n\n    return (\n        <div className=\"products\">\n            {\n                centers.map(center =>(\n                    <div className=\"card\" key={center.id}>\n                        <Link to={`/products/${center.id}`}>\n                            <img src={center.imageLink} alt=\"\"/>\n                        </Link>\n                        <div className=\"box\">\n                        <h3 title={center.name}>\n                            <Link to={`/products/${center.id}`}>{center.name}</Link>\n                        </h3>\n                        <p>{center.description}</p>\n                        <h4>{center.address}</h4>\n\n                        <Link to=\"/registracija\" className=\"cart\">\n                               Registruotis vakcinai\n                            </Link>\n                        </div>\n                    </div>\n                ))\n            }\n          \n          \n        </div>\n    )\n}\n","import React,{useContext, useState, useEffect} from 'react'\nimport {DataContext} from './DataProvider'\nimport {Link} from 'react-router-dom'\nimport ProductService from './services/ProductService'\nimport axios from 'axios'\n\nexport default function Cart() {\n    const value = useContext(DataContext)\n    const [vaccines, setVaccines] = value.vaccines;\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/EkoOda-war-0.0.1-SNAPSHOT/api/vaccines').then(response => setVaccines(response.data))\n    }, [setVaccines])\n\n    return (\n        <>\n           {\n               vaccines.map(product =>(\n                   <div className=\"details cart\" key={product.id}>\n                       <div className=\"box-details\">\n                           <h2 title={product.productTitle}>{product.name}</h2>\n                           <h3 style ={{marginTop: \"10px\"}}>{product.desctiption}</h3>\n                           <p>Quantity: {product.quantity}</p>\n                       </div>\n\n                   </div>\n               ))\n           }\n        </>\n    )\n}\n","import React from 'react';\nimport Header from './components/Header'\nimport Products from './components/Products'\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport {DataProvider} from './components/DataProvider'\nimport Vaccines from './components/Vaccines'\n\n\nfunction App() {\n\n  return (\n    <DataProvider>\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Header />\n          <section>\n            <Routes>\n              <Route path=\"centers\" element={ <Products /> } />\n              <Route path=\"vaccines\" element={ <Vaccines /> } />\n            </Routes>\n          </section>\n        </Router>\n      </div>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}